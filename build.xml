<?xml version="1.0"?>

<project name="crawler_tester" default="all" >
    
    <property name="src_dir" location="src" />
    <property name="out_dir" location="out" />
    <property name="libs_dir" location="libs" />
    <property name="classes_dir" location="${out_dir}/classes" />
    <property name="crawler" location="crawler4j" />
    
    <property name="crawler_exts" value="crawler_starter" />
    <property name="dns_server" value="dns_server" />
    <property name="tests" value="tests" />
    <property name="crawler_jar" location="${libs_dir}/crawler4j-4.3-SNAPSHOT-jar-with-dependencies.jar" />
        
    <property name="overall_path" value="edu/columbia/cs" />
    <property name="src_path" location="${src_dir}/${overall_path}" />
    <property name="classes_path" location="${out_dir}/classes/${overall_path}" />

    <property name="tests_pkg" value="edu.columbia.cs.tests" />

    <target name="init" description="create output directories, initialize submodule" >
        <mkdir dir="${out_dir}" />
        <mkdir dir="${classes_path}" />
        <exec executable="git" dir="${crawler}" >
            <arg line="submodule init" />
        </exec>
    </target>
    
    <target name="gen_jar" description="update the submodule cralwer4j and generates jar" depends="init" > 
        <!-- Update the submodule -->
        <exec executable="git" dir="${crawler}" >
            <arg line="submodule update" />
        </exec>
        <!-- Create the cralwer4j jar -->
        <exec executable="mvn" dir="${crawler}" >
            <arg line="clean install" />
        </exec>
    </target>

    <target name="update_lib" description="places jar in libs_dir" 
        depends="gen_jar" > 
        <mkdir dir="${libs_dir}" />
        <!-- Copy jar to libs_dir -->
        <copy file="${crawler}/target/crawler4j-4.3-SNAPSHOT-jar-with-dependencies.jar" todir="${libs_dir}" />
    </target>
    
    <target name="setup_crawler" description="compile the classes that extend the crawler" depends="init" >
        <mkdir dir="${classes_path}/${crawler_exts}" />
        <javac srcdir="${src_path}/${crawler_exts}" destdir="${classes_dir}"
            includeAntRuntime="false" debug="true" debugLevel="lines,source"
            classpath="${crawler_jar}" >
            <include name="CrawlerStarter.java" />
            <include name="CrawlerHandler.java" />
        </javac>
    </target>
    
    <target name="dns_server" description="compile the dns_server" depends="init" >
        <mkdir dir="${classes_path}/${dns_server}" />
        <javac srcdir="${src_path}/${dns_server}" destdir="${classes_dir}" 
            includeAntRuntime="false" debug="true" debugLevel="lines,source" >
            <include name="DNSEntity.java" />
            <include name="DNSTest.java" />
            <include name="DNSRequest.java" />
            <include name="DNSResponse.java" />
            <include name="DNSServer.java" />
            <include name="Decider.java" />
            <include name="HostList.java" />
            <include name="HostTable.java" />
            <include name="HostStore.java" />
            <include name="LoadServer.java" />
            <include name="ServerControl.java" />
            <include name="UDPClient.java" />
            <include name="tools.java" />
        </javac>
    </target>
        
    <target name="tests" description="compile the classes in the tests dir" depends="init, dns_server" >
        <mkdir dir="${classes_path}/${tests}" />
        <javac srcdir="${src_path}/${tests}" destdir="${classes_dir}"
            includeAntRuntime="false" debug="true" debugLevel="lines,source" 
            classpath="${classes_path}/${dns_server}:${classes_path}/${crawler_starter}:${crawler_jar}" >
            <include name="TestCase.java" />
            <include name="HTMLServerNode.java" />
            <include name="BlankServerNode.java" />
            <include name="RedirectServerNode.java" />
            <include name="TestDriver.java" />
            <include name="TestServer.java" />
            <include name="TestServerNode.java" />
            <include name="TestVisitRecord.java" />
            <include name="Monitor.java" />
            <include name="TestObjects.java" />
        </javac>
    </target>
    
    <target name="run">
        <mkdir dir="${out_dir}/crawl_data" />
        <exec executable="authbind" dir="${classes_dir}" >
            <arg line="java -classpath ${classes_dir}:${crawler_jar} ${tests_pkg}.TestDriver ${out_dir}/crawl_data" />
        </exec>
        <!--
        <java classname="${tests_pkg}.Main" classpath="${classes_dir}"  output="output.txt" />
        -->
    </target>

    <target name="run-authbind">
        <mkdir dir="${out_dir}/crawl_data" />
        <exec executable="authbind" dir="${classes_dir}" >
            <arg line="java -classpath ${classes_dir}:${crawler_jar} ${tests_pkg}.TestDriver ${out_dir}/crawl_data" />
        </exec>
        <!--
        <java classname="${tests_pkg}.Main" classpath="${classes_dir}"  output="output.txt" />
        -->
    </target>
    
    <target name="all" description="compile all classes" depends="clean, setup_crawler, tests" >
    </target>

    <property name="docs_dir" value="docs" />

    <target name="docs" description="generates documentation">
            <mkdir dir="${docs_dir}" />
            <javadoc destdir="${docs_dir}" >
                <fileset dir="${src_path}/${tests}">
                            <include name="*.java" />
                            <exclude name="*.swp" />
                    </fileset>
            </javadoc>
    </target>

    <target name="full_init" description="compile all classes and submodules" depends="clean, update_lib, setup_crawler, tests" >
    </target>

    <target name="clean" description="cleans up output directory">
        <delete dir="${out_dir}" />
        <delete dir="${docs_dir}" />
    </target>
</project>


